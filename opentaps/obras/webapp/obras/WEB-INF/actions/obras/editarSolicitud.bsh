import org.ofbiz.base.util.UtilMisc;
import org.opentaps.common.util.UtilClassification;
import org.opentaps.common.util.UtilCommon;
import org.opentaps.common.util.UtilAccountingTags;
import javolution.util.FastList;
import org.ofbiz.base.util.UtilHttp;
import org.ofbiz.base.crypto.HashCrypt;
import javolution.util.FastMap;
import org.opentaps.common.util.UtilConfig;
import org.opentaps.common.util.UtilCommon;
import org.ofbiz.base.util.UtilValidate;
import org.ofbiz.entity.condition.EntityExpr;
import org.ofbiz.entity.condition.EntityOperator;
import javax.servlet.ServletContext;
import org.ofbiz.base.component.ComponentConfig;
import org.ofbiz.base.util.UtilProperties;
import org.ofbiz.entity.condition.*;
import org.ofbiz.entity.util.EntityUtil;
import org.ofbiz.common.AB.UtilWorkflow;


Obra = delegator.findByPrimaryKey("Obra", UtilMisc.toMap("obraId", obraId));
context.put("Obra",Obra);

 conditionsSolicitante = UtilMisc.toList(
    new EntityExpr("partyId", EntityOperator.EQUALS, userLogin.get("partyId")),
    new EntityExpr("roleTypeId", EntityOperator.EQUALS, "SOLICITANTE")    
 );
 rolesSolicitante = delegator.findByCondition("PartyRole", new EntityConditionList(conditionsSolicitante, EntityOperator.AND), null, null);
 context.put("rolesSolicitante", rolesSolicitante);

conditionsAutorizador = UtilMisc.toList(
    new EntityExpr("partyId", EntityOperator.EQUALS, userLogin.get("partyId")),
    new EntityExpr("roleTypeId", EntityOperator.EQUALS, "AUTORIZADOR")    
 );
 rolesAutorizador = delegator.findByCondition("PartyRole", new EntityConditionList(conditionsAutorizador, EntityOperator.AND), null, null);
 context.put("rolesAutorizador", rolesAutorizador);

obraId = parameters.get("obraId");
context.put("comentarios", UtilWorkflow.getComentarios(delegator, obraId, "OBRAS"));

conditionsStatusAutorizacion = UtilMisc.toList(
    new EntityExpr("personParentId", EntityOperator.EQUALS, userLogin.get("partyId")),
    new EntityExpr("origenId", EntityOperator.EQUALS, obraId),
    new EntityExpr("tipoWorkFlowId", EntityOperator.EQUALS, "OBRAS")
 );
 statusAutorizacion = delegator.findByCondition("StatusAutorizacionWorkFlow", new EntityConditionList(conditionsStatusAutorizacion, EntityOperator.AND), null, null);
 context.put("statusAutorizacion", statusAutorizacion);
