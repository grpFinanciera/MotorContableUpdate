<?xml version="1.0" encoding="UTF-8"?>

<project name="OFBiz - Proyectos Component" default="jar" basedir=".">
    <import file="../../common.xml"/>

    <!-- ================================================================== -->
    <!-- Initialization of all property settings                            -->
    <!-- ================================================================== -->
	<target name="init">
	    <property environment="env"/>
	    <property name="desc" value="Proyectos Component"/>
	    <property name="name" value="ofbiz-proyectos"/>
	    <property name="component-name" value="ofbiz-proyectos"/>
	    <property name="ofbiz.home.dir" value="../.."/>
	    <property name="src.dir" value="src"/>
	    <property name="dtd.dir" value="dtd"/>
	    <property name="lib.dir" value="lib"/>
	    <property name="build.dir" value="build"/>
		<property name="ofbiz.dir" value="../../"/>
	</target>

	<target name="classpath">
		<path id="local.class.path">
            <fileset dir="${lib.dir}" includes="*.jar"/>
            <fileset dir="${ofbiz.dir}/framework/base/lib" includes="*.jar"/>
        	<fileset dir="${ofbiz.dir}/framework/base/lib/commons" includes="*.jar"/>
            <fileset dir="${ofbiz.dir}/framework/base/lib/j2eespecs" includes="*.jar"/>
            <fileset dir="${ofbiz.dir}/framework/base/build/lib" includes="*.jar"/>
            <fileset dir="${ofbiz.dir}/framework/entity/lib" includes="*.jar"/>
            <fileset dir="${ofbiz.dir}/framework/entity/build/lib" includes="*.jar"/>
            <fileset dir="${ofbiz.dir}/framework/security/build/lib" includes="*.jar"/>
            <fileset dir="${ofbiz.dir}/framework/service/lib" includes="*.jar"/>
            <fileset dir="${ofbiz.dir}/framework/service/build/lib" includes="*.jar"/>
            <fileset dir="${ofbiz.dir}/framework/minilang/build/lib" includes="*.jar"/>
            <fileset dir="${ofbiz.dir}/framework/widget/build/lib" includes="*.jar"/>
            <fileset dir="${ofbiz.dir}/framework/webapp/lib" includes="*.jar"/>
            <fileset dir="${ofbiz.dir}/framework/webapp/build/lib" includes="*.jar"/>
        	<fileset dir="${ofbiz.dir}/framework/common/build/lib" includes="*.jar"/>
            <fileset dir="${ofbiz.dir}/applications/party/build/lib" includes="*.jar"/>
            <fileset dir="${ofbiz.dir}/applications/product/build/lib" includes="*.jar"/>
            <fileset dir="${ofbiz.dir}/applications/order/build/lib" includes="*.jar"/>
            <fileset dir="${ofbiz.dir}/opentaps/opentaps-common/lib" includes="*.jar"/>
            <fileset dir="${ofbiz.dir}/opentaps/opentaps-common/lib/hibernate" includes="*.jar"/>
            <fileset dir="${ofbiz.dir}/opentaps/opentaps-common/build/lib" includes="*.jar"/>
		</path>
	</target>
	
	 <!-- ================================================================== -->
	 <!-- Removes all created files and directories                          -->
	 <!-- ================================================================== -->

	    <target name="clean" depends="clean-lib">
	        <delete dir="${build.dir}"/>
	    </target>

	    <target name="clean-lib" depends="init">
	        <delete dir="${build.dir}/lib"/>        
	    </target>

	<!-- ================================================================== -->
	    <!-- Makes sure the needed directory structure is in place              -->
	    <!-- ================================================================== -->

	    <target name="prepare" depends="clean-lib">
	        <mkdir dir="${build.dir}/classes"/>         
	        <mkdir dir="${build.dir}/lib"/>
	    </target>

	    <target name="prepare-docs" depends="init">
	        <mkdir dir="${build.dir}/javadocs"/>        
	    </target>

	    <!-- ================================================================== -->
	    <!-- Compilation of the source files                                    -->
	    <!-- ================================================================== -->               

	    <target name="classes" depends="prepare,classpath">
	        <javac debug="on" deprecation="on" destdir="${build.dir}/classes" includeantruntime="false">
	            <classpath>
	                <path refid="local.class.path"/>                
	            </classpath>
	            <src path="${src.dir}"/>
	        </javac>
	        <!-- also put the DTDs in the jar file... -->
	        <copy todir="${build.dir}/classes">
	            <fileset dir="${src.dir}" includes="**/*.properties,**/*.xml,**/*.bsh,**/*.logic,**/*.js,**/*.jacl,**/*.py"/>
	        </copy>                 
	    </target>

	    <target name="jar" depends="classes">
	        <jar jarfile="${build.dir}/lib/${name}.jar" basedir="${build.dir}/classes"/>
	    </target>


	    <!-- ================================================================== -->
	    <!-- Build JavaDoc                                                      -->
	    <!-- ================================================================== -->

	    <target name="docs" depends="prepare-docs,classpath">
	        <javadoc packagenames="com.absoluciones.proyectos.*" 
	                 classpathref="local.class.path"
	                 destdir="${build.dir}/javadocs" 
	                 Windowtitle="Open Source Strategies - ${desc}">
	            <sourcepath path="${src.dir}"/>
	        </javadoc>
	    </target>

	    <target name="all" depends="jar,docs"/>
</project>